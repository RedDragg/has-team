:root {
    --li-scale: 1.25;
    --li-scale-adj: 0.2;
    --li-pb: 0.25em;
    --fun-color: #ff00ff;
    --color-font-white: #FAF9F6;

    --font-size: clamp(16px, 1vw, 25px);
  }

  @supports color(display-p3 0 0 0) {
    :root {
      --fun-color: color(display-p3 0 0 0);
    }
  }

@supports selector(:has(+ *)) {
    aside {
      display: none;
    }
  }


 * {
    margin: 0;
    padding: 0;
 }


body {
    font-family: Arial, sans-serif;
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #f0f0f0;
}

main {
    width: 80vw;
    /* max-width: 600px; */
    display: flex;
    flex-wrap: wrap;
    gap: 3em;
    align-items: flex-start;
    justify-content: center;
}


li {
    list-style: none;
    margin: 0;
    padding: 0;
}

details {
    min-width: 20vw;
    margin-bottom: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 10px;
    background-color: #ffffff;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}
summary {
    font-weight: bold;
    cursor: pointer;
    outline: none;
}

details:nth-of-type(5){
  :where(p, ul, ol) {
    color: red;
  }
  
  :is(ul, ol, p){
    color: blue;
  }

  p{
    color:green;
  }
}



details:nth-of-type(3){
  display: flex;
  flex-direction: column;
    /* selecteer niet de laatste p in de details */
    p:not(:last-of-type) {
    color: green;
    }

    /* selecteer alles behalve de p */
    :not(p) {
    text-decoration: underline;
    }

    /* selecteer alle andere links die niet naar deze https connect */
    a:not([href*="https://css-tricks.com/almanac/pseudo-selectors/n/not/"]){
        color: red;
    }

    /* selecteer alle buttons die niet disabled zijn */
    button:not([disabled]){
        font-size: 25px;
    }

    padding-bottom: 0.5em;
}

/* ************************************************************************* */
/* section 2 */ /* section 2 */ /* section 2 */ /* section 2 */ /* section 2 */
/* ************************************************************************* */

details:nth-of-type(2){

    ul {
        list-style: none;
        padding: 0;
        display: grid;
        font-size: var(--font-size);
      }
      
      li {
        transition: all cubic-bezier(0.4, 0.8, 0.71, 1.03) 180ms;
        transition-delay: var(--li-delay, 0);
        padding-block: var(--li-pb);
        margin-inline: auto;
        width: 15ch;
      
        p {
          display: block;
          text-align: center;
          padding: 0.5em 1em;
          background-color: var(--fun-color);
          border-radius: 0.5em;
          color: var(--color-font-white);
        }
      }
      
    li:hover {
        --li-pb: 0.75em;
      
        scale: var(--li-scale);
    
        cursor: pointer;
      }
      
      /* Select list item before the hovered one */
      li:has(+ li:hover),
      /* Select list item after the hovered one */
      li:hover + li {
        --li-pb: 0.15em;
        --li-delay: 40ms;
      
        scale: calc(var(--li-scale) - var(--li-scale-adj));
        opacity: 0.85;
      }
      
      /* When a list item is being hovered,
      select list items not hovered, or before/after hover */
        /* 
        ul:has(> :hover): This selects any <ul> element that is a direct child of the second <details> element and contains at least one child element that is currently being hovered over.
    
        li:not(:hover, :has(+ :hover), li:hover + *): This further refines the selection to <li> elements within the <ul> that meet the following criteria:
    
        :not(:hover): The <li> element itself is not being hovered over.
        :not(:has(+ :hover)): The <li> element does not have a sibling immediately following it that is being hovered over.
        :not(li:hover + *): The <li> element is not immediately followed by any element that is being hovered over.
        In summary, this selector targets <li> elements within the second <details> element's <ul> that contains a hovered child, but the <li> itself is not hovered, does not have a hovered sibling, and is not followed by a hovered element. */
    
    ul:has(> :hover) li:not(:hover, :has(+ :hover), li:hover + *) {
        --list-pb: 0;
        --li-delay: 60ms;
      
        scale: calc(1 - var(--li-scale-adj));
        opacity: 0.75;
      }
      
       
}

  
  /* :has() support alert */
  details:nth-of-type(2) aside {
    max-width: 30ch;
    padding: 1rem;
    background-color: palegoldenrod;
    border-radius: 0.5rem;
    margin-block-end: 1rem;
    line-height: 1.3;
  
    code {
      font-size: 1.25em;
      color: firebrick;
    }
  }

/* :has formulier */
details:nth-of-type(1){
    form {
        overflow-x: auto;

        input {
            border: 1px solid #444 !important;
            border-radius: 5px;
            height: 2rem;
            border: 1px;

            /* Input valid & invalid styling */
            &:invalid { border-right: 3px solid crimson !important; }
            &:valid { border-right: 3px solid forestgreen !important; }
        }

        button {
            background: forestgreen;
            color: #fff;
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        /* Als het formulier een invalid input heeft */
        &:has(input:invalid) {
            button {
                background-color: gray;
                color: #000;
                cursor: not-allowed;
            }
        }
    }
}
